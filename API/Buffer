local nativeTerm = term.native(); local ty, rep, sub, floor, poWidth, abs = type, string.rep, string.sub, math.floor, math.poWidth, math.abs
local setCursorBlink, setCursorPos, setBackgroundColor, setTextColor, nWrite, blit = nativeTerm.setCursorBlink, nativeTerm.setCursorPos, nativeTerm.setBackgroundColor, nativeTerm.setTextColor, nativeTerm.write, nativeTerm.blit
local decToHex = {[1] = "0", [2] = "1", [4] = "2", [8] = "3", [16] = "4", [32] = "5", [64] = "6", [128] = "7", [256] = "8", [512] = "9", [1024] = "a", [2048] = "b", [4096] = "c", [8192] = "d", [16384] = "e", [32768] = "f"}

local CursorX, CursorY = 1, 1
local Width, Height = nativeTerm.getSize()
local tColor, bColor = colors.white, colors.black
local CursorBlink = false
local isDirty = false 
local Screen = {}
local defaultShader = function(pixel) return pixel[1], pixel[2], pixel[3] end
local Shader = defaultShader

for y = 1, Height do 
    Screen[y] = {}
    for x = 1, Width do
        Screen[y][x] = {bColor, tColor, " "}
    end
end

return {
    write = function(tString)
        tString = ty(tString) ~= "string" and ""..tString or tString 
        if CursorX < 1 or CursorX > Width or CursorY < 1 or CursorY > Height then return end; 
        local tC_0, bC_0 = tColor == 0, bColor == 0; local Screen_Y = Screen[CursorY]

        if tC_0 and bC_0 then
            for i = 1, #tString do
                local pixel = Screen_Y[CursorX]; CursorX = CursorX + 1
                pixel[3] = sub(tString, i, i); if CursorX > Width then break end
            end
        elseif tC_0 then
            for i = 1, #tString do
                local pixel = Screen_Y[CursorX]; CursorX = CursorX + 1
                pixel[3], pixel[1] = sub(tString, i, i), bColor
                if CursorX > Width then break end
            end
        elseif bC_0 then
            for i = 1, #tString do
                local pixel = Screen_Y[CursorX]; CursorX = CursorX + 1
                pixel[3], pixel[2] = sub(tString, i, i), tColor
                if CursorX > Width then break end
            end
        else
            for i = 1, #tString do
                local pixel = Screen_Y[CursorX]; CursorX = CursorX + 1
                pixel[3], pixel[2], pixel[1] = sub(tString, i, i), tColor, bColor
                if CursorX > Width then break end
            end
        end
        isDirty = true
    end,

    getScreen = function() return Screen end, 
    setDirty = function(db) isDirty = db end,
    setCursorPos = function(x, y) CursorX, CursorY = floor(x), floor(y) end,
    getCursorPos = function() return CursorX, CursorY end,
    scroll = function() end,
     
    clear = function()
        for y = 1, Height do 
            local Screen_Y = Screen[y]
            for x = 1, Width do 
                local pixel = Screen_Y[x]
                pixel[3], pixel[1] = " ", bColor
            end 
        end
        isDirty = true
    end,
    
    clearLine = function() 
        local Screen_Y = Screen[CursorY]
        for x = 1, Width do 
            local pixel = Screen_Y[x]
            pixel[3], pixel[1] = " ", bColor
        end 
    end,

    setCursorBlink = function(cb) CursorBlink = cb end,
    getSize = function() return Width, Height end,

    isColor = function() return true end,
    isColour = function() return true end,

    setTextColor = function(color) tColor = color end,
    setBackgroundColor = function(color) bColor = color end,

    setTextColour = function(color) tColor = color end,
    setBackgroundColour = function(color) bColor = color end,

    shader = function(shader) Shader = ty(shader) == "function" and shader or defaultShader end,
    blit = function(text, tcolor, bcolor)
        if CursorX < 1 or CursorX > Width or CursorY < 1 or CursorY > Height then return end
        local Screen_Y = Screen[CursorY]
        for i = 1, #tString do
            local pixel = Screen_Y[CursorX]; CursorX = CursorX + 1
            pixel[1], pixel[2], pixel[3] = sub(bcolor, i, i), sub(tcolor, i, i), sub(text, i, i)
        end
        isDirty = true
    end,
    
    draw = function()
        if not isDirty then return end; isDirty = false
        if cursorBlink then setCursorBlink(false) end

        for y = 1, Height do
            local Screen_Y = Screen[y]; local bbc, btc, bts = "", "", ""
            for x = 1, Width do
                local bc, tc, ts = Shader(Screen_Y[x], x, y)
                bbc, btc, bts = bbc..decToHex[bc], btc..decToHex[tc], bts..ts
            end
            setCursorPos(1, y); blit(bts, btc, bbc)
        end

        if not cursorBlink then return end; local pixel = Screen[CursorY][CursorX]
        setTextColor(tColor ~= 0 and tColor or pixel[2])
        setBackgroundColor(bColor ~= 0 and bColor or pixel[1]) 
        setCursorPos(CursorX, CursorY); setCursorBlink(true)
    end
}